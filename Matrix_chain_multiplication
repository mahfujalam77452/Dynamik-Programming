#include <bits/stdc++.h>
using namespace std;
int dp[1000][1000];
int MatrixChainOrder(int p[], int i, int j)
{
	if(i==j)return 0;
	if(dp[i][j]!=-1)return dp[i][j];
	int k;
	dp[i][j]=INT_MAX;
	int count;
	for(k=i;k<j;k++){
	    count=MatrixChainOrder(p,i,k)+MatrixChainOrder(p,k+1,j)+(p[i-1]*p[k]*p[j]);
	    dp[i][j]=min(dp[i][j],count);
	}

	
	return dp[i][j];
}

// Driver Code
int main()
{
	int arr[] = { 1, 2, 3, 4, 3 };
	int N = sizeof(arr) / sizeof(arr[0]);
    memset(dp, -1, sizeof dp);
	// Function call
	cout << "Minimum number of multiplications is "
		<< MatrixChainOrder(arr, 1, N - 1);//*** Here it is start from 1.
	return 0;
}

// This code is contributed by Md. Mahfuj Alam

